<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <!-- spring中的依赖注入
        依赖注入:
            Dependency Injection
        Ioc的作用:
            降低程序间的耦合（依赖关系）
        依赖关系的管理:
            以后都交给spring来维护
        在当前类需要用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明

        依赖关系的维护:
            就称之为依赖注入。
        依赖注入:
            能注入的数据:有三类
                基本类型和string
                其他bean类型（在配置文件中或者注解配置过的bean)
                复杂类型/集合类型
            注入的方式:有三种
                第—种:使用构造函数提供
                第二种:使用set方法提供
                第三种:使用注解提供（明天的内容）
    -->

    <!-- 构造函数注入：
        使用的标签:constructor-arg
        标签出现的位置:bean标签的丙部
        标签中的属性
            type:用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或某些参数的类型
            index:用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引的位置是从 0 开始
            name:用于指定给构造函数中指定名称的参数赋值                    常用的
            ======================以上三个用于指定给构造函数中哪个参数赋值===========================
            value:用于提供基本类型和string类型的数据
            ref:用于指定其他的bean类型数据，它指的是在spring的IOC核心容器中出现过的bean对象
        优势:
            在获取bean对象时，注入数据是必须的操作，否则对象无法创建成功。
        弊端:
            改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供。
      -->
    <bean id="objectBean1" class="edu.xcu.Spring.ObjectBean">
        <constructor-arg name="name" value="构造函数注入"/>
        <constructor-arg index="1" value="18"/>
        <constructor-arg type="java.util.Date" ref="date"/>
    </bean>
    <!--  配置一个日期对象  -->
    <bean id="date" class="java.util.Date"/>

    <!-- set方法注入
        涉及的标签:property
        出现的位置:bean标签的内部
        标签的属性
            name:用于指定给构造函数中指定名称的参数赋值
            value:用于提供基本类型和string类型的数据
            ref:用于指定其他的bean类型数据，它指的是在spring的IOC核心容器中出现过的bean对象

        优势:
            创建对象时没有明确的限制，可以直接使用默认构造函数
        弊端:
            如果有某个成员必须有值，则获取对象是有可能set方法没有执行。
      -->
    <bean id="objectBean2" class="edu.xcu.Spring.ObjectBean">
        <property name="name" value="set方法注入"/>
        <property name="age" value="18"/>
<!--        <property name="birthday" ref="date"/>-->
    </bean>

    <!--杂类型的注入/集合类型的注入
        用于给List结构集合注入的标签，
            list array set
        用于个Map结构乘合注入的标签:
            map props
        结构相同，标签可以互换
    -->
    <bean id="objectBean3" class="edu.xcu.Spring.ObjectBean">
        <property name="name" value="复杂类型注入"/>
        <property name="myStr">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </list>
        </property>
        <property name="mySet">
            <set>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </set>
        </property>
        <property name="myMap">
            <map>
                <entry key="A" value="AAA"/>
                <entry key="B" value="BBB"/>
                <entry key="C" value="CCC"/>
            </map>
        </property>
        <property name="myProps">
            <props>
                <prop key="testC">ccc</prop>
                <prop key="testA">aaa</prop>
            </props>
        </property>
    </bean>

</beans>